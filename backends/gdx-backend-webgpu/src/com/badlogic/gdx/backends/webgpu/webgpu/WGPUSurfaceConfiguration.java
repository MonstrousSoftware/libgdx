package com.badlogic.gdx.backends.webgpu.webgpu;

import com.badlogic.gdx.backends.webgpu.utils.JavaWebGPU;
import com.badlogic.gdx.backends.webgpu.utils.WgpuJavaStruct;
import jnr.ffi.Runtime;

/** NOTE: THIS FILE WAS PRE-GENERATED BY JNR_GEN! */
public class WGPUSurfaceConfiguration extends WgpuJavaStruct {

    private final DynamicStructRef<WGPUChainedStruct> nextInChain = new DynamicStructRef<>(WGPUChainedStruct.class);
    private final Pointer device = new Pointer();
    private final Enum<WGPUTextureFormat> format = new Enum<>(WGPUTextureFormat.class);
    private final Unsigned32 usage = new Unsigned32();
    private final size_t viewFormatCount = new size_t();
    private final Pointer viewFormats = new Pointer();
    private final Enum<WGPUCompositeAlphaMode> alphaMode = new Enum<>(WGPUCompositeAlphaMode.class);
    private final Unsigned32 width = new Unsigned32();
    private final Unsigned32 height = new Unsigned32();
    private final Enum<WGPUPresentMode> presentMode = new Enum<>(WGPUPresentMode.class);

    private WGPUSurfaceConfiguration(){}

    @Deprecated
    public WGPUSurfaceConfiguration(Runtime runtime){
        super(runtime);
    }

	/**
	* Creates this struct on the java heap.
	* In general, this should <b>not</b> be used because these structs
	* cannot be directly passed into native code. 
	*/
    public static WGPUSurfaceConfiguration createHeap(){
        return new WGPUSurfaceConfiguration();
    }

	/**
	* Creates this struct in direct memory.
	* This is how most structs should be created (unless, they
	* are members of a nothing struct)
	* 
	* @see WgpuJavaStruct#useDirectMemory
	*/
    public static WGPUSurfaceConfiguration createDirect(){
        WGPUSurfaceConfiguration struct = new WGPUSurfaceConfiguration();
        struct.useDirectMemory();
        return struct;
    }


    public DynamicStructRef<WGPUChainedStruct> getNextInChain(){
        return nextInChain;
    }

    public WGPUSurfaceConfiguration setNextInChain(WGPUChainedStruct... x){
        if(x.length == 0 || x[0] == null){
            this.nextInChain.set(JavaWebGPU.createNullPointer());
        } else {
            this.nextInChain.set(x);
        }
        return this;
    }

    public jnr.ffi.Pointer getDevice(){
        return device.get();
    }

    public WGPUSurfaceConfiguration setDevice(jnr.ffi.Pointer val){
        this.device.set(val); return this;
    }

    public WGPUTextureFormat getFormat(){
        return format.get();
    }

    public WGPUSurfaceConfiguration setFormat(WGPUTextureFormat val){
        this.format.set(val); return this;
    }

    public long getUsage(){
        return usage.get();
    }

    public WGPUSurfaceConfiguration setUsage(long val){
        this.usage.set(val); return this;
    }

    public long getViewFormatCount(){
        return viewFormatCount.get();
    }

    public WGPUSurfaceConfiguration setViewFormatCount(long val){
        this.viewFormatCount.set(val); return this;
    }

    public jnr.ffi.Pointer getViewFormats(){
        return viewFormats.get();
    }

    public WGPUSurfaceConfiguration setViewFormats(jnr.ffi.Pointer val){
        this.viewFormats.set(val); return this;
    }

    public WGPUCompositeAlphaMode getAlphaMode(){
        return alphaMode.get();
    }

    public WGPUSurfaceConfiguration setAlphaMode(WGPUCompositeAlphaMode val){
        this.alphaMode.set(val); return this;
    }

    public long getWidth(){
        return width.get();
    }

    public WGPUSurfaceConfiguration setWidth(long val){
        this.width.set(val); return this;
    }

    public long getHeight(){
        return height.get();
    }

    public WGPUSurfaceConfiguration setHeight(long val){
        this.height.set(val); return this;
    }

    public WGPUPresentMode getPresentMode(){
        return presentMode.get();
    }

    public WGPUSurfaceConfiguration setPresentMode(WGPUPresentMode val){
        this.presentMode.set(val); return this;
    }

}