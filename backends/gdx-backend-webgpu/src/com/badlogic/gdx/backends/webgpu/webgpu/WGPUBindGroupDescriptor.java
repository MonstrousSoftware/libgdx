package com.badlogic.gdx.backends.webgpu.webgpu;

import com.badlogic.gdx.backends.webgpu.utils.CStrPointer;
import com.badlogic.gdx.backends.webgpu.utils.JavaWebGPU;
import com.badlogic.gdx.backends.webgpu.utils.RustCString;
import com.badlogic.gdx.backends.webgpu.utils.WgpuJavaStruct;
import jnr.ffi.Runtime;
import jnr.ffi.Struct;
import org.jetbrains.annotations.Nullable;

/** NOTE: THIS FILE WAS PRE-GENERATED BY JNR_GEN! */
public class WGPUBindGroupDescriptor extends WgpuJavaStruct {

    private final DynamicStructRef<WGPUChainedStruct> nextInChain = new DynamicStructRef<>(WGPUChainedStruct.class);
    private final @Nullable @CStrPointer Struct.Pointer label = new Pointer();
    private final Pointer layout = new Pointer();
    private final size_t entryCount = new size_t();
    private final DynamicStructRef<WGPUBindGroupEntry> entries = new DynamicStructRef<>(WGPUBindGroupEntry.class);

    private WGPUBindGroupDescriptor(){}

    @Deprecated
    public WGPUBindGroupDescriptor(Runtime runtime){
        super(runtime);
    }

	/**
	* Creates this struct on the java heap.
	* In general, this should <b>not</b> be used because these structs
	* cannot be directly passed into native code. 
	*/
    public static WGPUBindGroupDescriptor createHeap(){
        return new WGPUBindGroupDescriptor();
    }

	/**
	* Creates this struct in direct memory.
	* This is how most structs should be created (unless, they
	* are members of a nothing struct)
	* 
	* @see WgpuJavaStruct#useDirectMemory
	*/
    public static WGPUBindGroupDescriptor createDirect(){
        WGPUBindGroupDescriptor struct = new WGPUBindGroupDescriptor();
        struct.useDirectMemory();
        return struct;
    }


    public DynamicStructRef<WGPUChainedStruct> getNextInChain(){
        return nextInChain;
    }

    public WGPUBindGroupDescriptor setNextInChain(WGPUChainedStruct... x){
        if(x.length == 0 || x[0] == null){
            this.nextInChain.set(JavaWebGPU.createNullPointer());
        } else {
            this.nextInChain.set(x);
        }
        return this;
    }

    public java.lang.String getLabel(){
        return RustCString.fromPointer(label.get());
    }

    public WGPUBindGroupDescriptor setLabel(java.lang.String str){
        this.label.set(RustCString.toPointer(str)); return this;
    }

    public jnr.ffi.Pointer getLayout(){
        return layout.get();
    }

    public WGPUBindGroupDescriptor setLayout(jnr.ffi.Pointer val){
        this.layout.set(val); return this;
    }

    public long getEntryCount(){
        return entryCount.get();
    }

    public WGPUBindGroupDescriptor setEntryCount(long val){
        this.entryCount.set(val); return this;
    }

    public DynamicStructRef<WGPUBindGroupEntry> getEntries(){
        return entries;
    }

    public WGPUBindGroupDescriptor setEntries(WGPUBindGroupEntry... x){
        if(x.length == 0 || x[0] == null){
            this.entries.set(JavaWebGPU.createNullPointer());
        } else {
            this.entries.set(x);
        }
        return this;
    }

}