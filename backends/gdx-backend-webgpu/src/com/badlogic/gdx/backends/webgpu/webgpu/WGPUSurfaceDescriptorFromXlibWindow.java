package com.badlogic.gdx.backends.webgpu.webgpu;

import com.badlogic.gdx.backends.webgpu.utils.WgpuJavaStruct;
import jnr.ffi.Runtime;

/** NOTE: THIS FILE WAS PRE-GENERATED BY JNR_GEN! */
public class WGPUSurfaceDescriptorFromXlibWindow extends WgpuJavaStruct {

    private final WGPUChainedStruct chain = inner(WGPUChainedStruct.createHeap());
    private final Pointer display = new Pointer();
    private final Unsigned64 window = new Unsigned64();

    private WGPUSurfaceDescriptorFromXlibWindow(){}

    @Deprecated
    public WGPUSurfaceDescriptorFromXlibWindow(Runtime runtime){
        super(runtime);
    }

	/**
	* Creates this struct on the java heap.
	* In general, this should <b>not</b> be used because these structs
	* cannot be directly passed into native code. 
	*/
    public static WGPUSurfaceDescriptorFromXlibWindow createHeap(){
        return new WGPUSurfaceDescriptorFromXlibWindow();
    }

	/**
	* Creates this struct in direct memory.
	* This is how most structs should be created (unless, they
	* are members of a nothing struct)
	* 
	* @see WgpuJavaStruct#useDirectMemory
	*/
    public static WGPUSurfaceDescriptorFromXlibWindow createDirect(){
        WGPUSurfaceDescriptorFromXlibWindow struct = new WGPUSurfaceDescriptorFromXlibWindow();
        struct.useDirectMemory();
        return struct;
    }


    public WGPUChainedStruct getChain(){
        return chain;
    }

    public jnr.ffi.Pointer getDisplay(){
        return display.get();
    }

    public WGPUSurfaceDescriptorFromXlibWindow setDisplay(jnr.ffi.Pointer val){
        this.display.set(val); return this;
    }

    public @jnr.ffi.types.u_int64_t long getWindow(){
        return window.get();
    }

    public WGPUSurfaceDescriptorFromXlibWindow setWindow(@jnr.ffi.types.u_int64_t long val){
        this.window.set(val); return this;
    }

}