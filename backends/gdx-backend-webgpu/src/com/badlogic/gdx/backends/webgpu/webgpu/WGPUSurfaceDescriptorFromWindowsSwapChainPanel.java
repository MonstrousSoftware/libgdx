
package com.badlogic.gdx.backends.webgpu.webgpu;

import com.badlogic.gdx.backends.webgpu.utils.WgpuJavaStruct;
import jnr.ffi.Runtime;

/** NOTE: THIS FILE WAS PRE-GENERATED BY JNR_GEN! */
public class WGPUSurfaceDescriptorFromWindowsSwapChainPanel extends WgpuJavaStruct {

	private final WGPUChainedStruct chain = inner(WGPUChainedStruct.createHeap());
	private final Pointer swapChainPanel = new Pointer();

	private WGPUSurfaceDescriptorFromWindowsSwapChainPanel () {
	}

	@Deprecated
	public WGPUSurfaceDescriptorFromWindowsSwapChainPanel (Runtime runtime) {
		super(runtime);
	}

	/** Creates this struct on the java heap. In general, this should <b>not</b> be used because these structs cannot be directly
	 * passed into native code. */
	public static WGPUSurfaceDescriptorFromWindowsSwapChainPanel createHeap () {
		return new WGPUSurfaceDescriptorFromWindowsSwapChainPanel();
	}

	/** Creates this struct in direct memory. This is how most structs should be created (unless, they are members of a nothing
	 * struct)
	 * 
	 * @see WgpuJavaStruct#useDirectMemory */
	public static WGPUSurfaceDescriptorFromWindowsSwapChainPanel createDirect () {
		WGPUSurfaceDescriptorFromWindowsSwapChainPanel struct = new WGPUSurfaceDescriptorFromWindowsSwapChainPanel();
		struct.useDirectMemory();
		return struct;
	}

	public WGPUChainedStruct getChain () {
		return chain;
	}

	public jnr.ffi.Pointer getSwapChainPanel () {
		return swapChainPanel.get();
	}

	public WGPUSurfaceDescriptorFromWindowsSwapChainPanel setSwapChainPanel (jnr.ffi.Pointer val) {
		this.swapChainPanel.set(val);
		return this;
	}

}
