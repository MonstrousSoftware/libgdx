
package com.badlogic.gdx.backends.webgpu.webgpu;

import com.badlogic.gdx.backends.webgpu.utils.JavaWebGPU;
import com.badlogic.gdx.backends.webgpu.utils.WgpuJavaStruct;
import jnr.ffi.Runtime;

/** NOTE: THIS FILE WAS PRE-GENERATED BY JNR_GEN! */
public class WGPUUncapturedErrorCallbackInfo extends WgpuJavaStruct {

	private final DynamicStructRef<WGPUChainedStruct> nextInChain = new DynamicStructRef<>(WGPUChainedStruct.class);
	private final Pointer callback = new Pointer();
	private final Pointer userdata = new Pointer();

	private WGPUUncapturedErrorCallbackInfo () {
	}

	@Deprecated
	public WGPUUncapturedErrorCallbackInfo (Runtime runtime) {
		super(runtime);
	}

	/** Creates this struct on the java heap. In general, this should <b>not</b> be used because these structs cannot be directly
	 * passed into native code. */
	public static WGPUUncapturedErrorCallbackInfo createHeap () {
		return new WGPUUncapturedErrorCallbackInfo();
	}

	/** Creates this struct in direct memory. This is how most structs should be created (unless, they are members of a nothing
	 * struct)
	 * 
	 * @see WgpuJavaStruct#useDirectMemory */
	public static WGPUUncapturedErrorCallbackInfo createDirect () {
		WGPUUncapturedErrorCallbackInfo struct = new WGPUUncapturedErrorCallbackInfo();
		struct.useDirectMemory();
		return struct;
	}

	public DynamicStructRef<WGPUChainedStruct> getNextInChain () {
		return nextInChain;
	}

	public WGPUUncapturedErrorCallbackInfo setNextInChain (WGPUChainedStruct... x) {
		if (x.length == 0 || x[0] == null) {
			this.nextInChain.set(JavaWebGPU.createNullPointer());
		} else {
			this.nextInChain.set(x);
		}
		return this;
	}

	public jnr.ffi.Pointer getCallback () {
		return callback.get();
	}

	public WGPUUncapturedErrorCallbackInfo setCallback (jnr.ffi.Pointer val) {
		this.callback.set(val);
		return this;
	}

	public jnr.ffi.Pointer getUserdata () {
		return userdata.get();
	}

	public WGPUUncapturedErrorCallbackInfo setUserdata (jnr.ffi.Pointer val) {
		this.userdata.set(val);
		return this;
	}

}
