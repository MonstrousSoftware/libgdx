
package com.badlogic.gdx.backends.webgpu.webgpu;

import com.badlogic.gdx.backends.webgpu.utils.JavaWebGPU;
import com.badlogic.gdx.backends.webgpu.utils.WgpuJavaStruct;
import jnr.ffi.Runtime;

/** NOTE: THIS FILE WAS PRE-GENERATED BY JNR_GEN! */
public class WGPUInstanceFeatures extends WgpuJavaStruct {

	private final DynamicStructRef<WGPUChainedStruct> nextInChain = new DynamicStructRef<>(WGPUChainedStruct.class);
	private final Unsigned32 timedWaitAnyEnable = new Unsigned32();
	private final size_t timedWaitAnyMaxCount = new size_t();

	private WGPUInstanceFeatures () {
	}

	@Deprecated
	public WGPUInstanceFeatures (Runtime runtime) {
		super(runtime);
	}

	/** Creates this struct on the java heap. In general, this should <b>not</b> be used because these structs cannot be directly
	 * passed into native code. */
	public static WGPUInstanceFeatures createHeap () {
		return new WGPUInstanceFeatures();
	}

	/** Creates this struct in direct memory. This is how most structs should be created (unless, they are members of a nothing
	 * struct)
	 * 
	 * @see WgpuJavaStruct#useDirectMemory */
	public static WGPUInstanceFeatures createDirect () {
		WGPUInstanceFeatures struct = new WGPUInstanceFeatures();
		struct.useDirectMemory();
		return struct;
	}

	public DynamicStructRef<WGPUChainedStruct> getNextInChain () {
		return nextInChain;
	}

	public WGPUInstanceFeatures setNextInChain (WGPUChainedStruct... x) {
		if (x.length == 0 || x[0] == null) {
			this.nextInChain.set(JavaWebGPU.createNullPointer());
		} else {
			this.nextInChain.set(x);
		}
		return this;
	}

	public long getTimedWaitAnyEnable () {
		return timedWaitAnyEnable.get();
	}

	public WGPUInstanceFeatures setTimedWaitAnyEnable (long val) {
		this.timedWaitAnyEnable.set(val);
		return this;
	}

	public long getTimedWaitAnyMaxCount () {
		return timedWaitAnyMaxCount.get();
	}

	public WGPUInstanceFeatures setTimedWaitAnyMaxCount (long val) {
		this.timedWaitAnyMaxCount.set(val);
		return this;
	}

}
