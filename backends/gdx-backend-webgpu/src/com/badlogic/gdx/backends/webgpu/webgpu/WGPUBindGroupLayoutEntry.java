package com.badlogic.gdx.backends.webgpu.webgpu;

import com.badlogic.gdx.backends.webgpu.utils.JavaWebGPU;
import com.badlogic.gdx.backends.webgpu.utils.WgpuJavaStruct;
import jnr.ffi.Runtime;

/** NOTE: THIS FILE WAS PRE-GENERATED BY JNR_GEN! */
public class WGPUBindGroupLayoutEntry extends WgpuJavaStruct {

    private final DynamicStructRef<WGPUChainedStruct> nextInChain = new DynamicStructRef<>(WGPUChainedStruct.class);
    private final Unsigned32 binding = new Unsigned32();
    private final Unsigned32 visibility = new Unsigned32();
    private final WGPUBufferBindingLayout buffer = inner(WGPUBufferBindingLayout.createHeap());
    private final WGPUSamplerBindingLayout sampler = inner(WGPUSamplerBindingLayout.createHeap());
    private final WGPUTextureBindingLayout texture = inner(WGPUTextureBindingLayout.createHeap());
    private final WGPUStorageTextureBindingLayout storageTexture = inner(WGPUStorageTextureBindingLayout.createHeap());

    private WGPUBindGroupLayoutEntry(){}

    @Deprecated
    public WGPUBindGroupLayoutEntry(Runtime runtime){
        super(runtime);
    }

	/**
	* Creates this struct on the java heap.
	* In general, this should <b>not</b> be used because these structs
	* cannot be directly passed into native code. 
	*/
    public static WGPUBindGroupLayoutEntry createHeap(){
        return new WGPUBindGroupLayoutEntry();
    }

	/**
	* Creates this struct in direct memory.
	* This is how most structs should be created (unless, they
	* are members of a nothing struct)
	* 
	* @see WgpuJavaStruct#useDirectMemory
	*/
    public static WGPUBindGroupLayoutEntry createDirect(){
        WGPUBindGroupLayoutEntry struct = new WGPUBindGroupLayoutEntry();
        struct.useDirectMemory();
        return struct;
    }


    public DynamicStructRef<WGPUChainedStruct> getNextInChain(){
        return nextInChain;
    }

    public WGPUBindGroupLayoutEntry setNextInChain(WGPUChainedStruct... x){
        if(x.length == 0 || x[0] == null){
            this.nextInChain.set(JavaWebGPU.createNullPointer());
        } else {
            this.nextInChain.set(x);
        }
        return this;
    }

    public long getBinding(){
        return binding.get();
    }

    public WGPUBindGroupLayoutEntry setBinding(long val){
        this.binding.set(val); return this;
    }

    public long getVisibility(){
        return visibility.get();
    }

    public WGPUBindGroupLayoutEntry setVisibility(long val){
        this.visibility.set(val); return this;
    }

    public WGPUBufferBindingLayout getBuffer(){
        return buffer;
    }

    public WGPUSamplerBindingLayout getSampler(){
        return sampler;
    }

    public WGPUTextureBindingLayout getTexture(){
        return texture;
    }

    public WGPUStorageTextureBindingLayout getStorageTexture(){
        return storageTexture;
    }

}