
package com.badlogic.gdx.backends.webgpu.webgpu;

import com.badlogic.gdx.backends.webgpu.utils.JavaWebGPU;
import com.badlogic.gdx.backends.webgpu.utils.WgpuJavaStruct;
import jnr.ffi.Runtime;
import jnr.ffi.Struct;
import org.jetbrains.annotations.Nullable;

/** NOTE: THIS FILE WAS PRE-GENERATED BY JNR_GEN! */
public class WGPUBindGroupEntry extends WgpuJavaStruct {

	private final DynamicStructRef<WGPUChainedStruct> nextInChain = new DynamicStructRef<>(WGPUChainedStruct.class);
	private final Unsigned32 binding = new Unsigned32();
	private final @Nullable Struct.Pointer buffer = new Pointer();
	private final Unsigned64 offset = new Unsigned64();
	private final Unsigned64 size = new Unsigned64();
	private final @Nullable Struct.Pointer sampler = new Pointer();
	private final @Nullable Struct.Pointer textureView = new Pointer();

	private WGPUBindGroupEntry () {
	}

	@Deprecated
	public WGPUBindGroupEntry (Runtime runtime) {
		super(runtime);
	}

	/** Creates this struct on the java heap. In general, this should <b>not</b> be used because these structs cannot be directly
	 * passed into native code. */
	public static WGPUBindGroupEntry createHeap () {
		return new WGPUBindGroupEntry();
	}

	/** Creates this struct in direct memory. This is how most structs should be created (unless, they are members of a nothing
	 * struct)
	 * 
	 * @see WgpuJavaStruct#useDirectMemory */
	public static WGPUBindGroupEntry createDirect () {
		WGPUBindGroupEntry struct = new WGPUBindGroupEntry();
		struct.useDirectMemory();
		return struct;
	}

	public DynamicStructRef<WGPUChainedStruct> getNextInChain () {
		return nextInChain;
	}

	public WGPUBindGroupEntry setNextInChain (WGPUChainedStruct... x) {
		if (x.length == 0 || x[0] == null) {
			this.nextInChain.set(JavaWebGPU.createNullPointer());
		} else {
			this.nextInChain.set(x);
		}
		return this;
	}

	public long getBinding () {
		return binding.get();
	}

	public WGPUBindGroupEntry setBinding (long val) {
		this.binding.set(val);
		return this;
	}

	public jnr.ffi.Pointer getBuffer () {
		return buffer.get();
	}

	public WGPUBindGroupEntry setBuffer (jnr.ffi.Pointer val) {
		this.buffer.set(val);
		return this;
	}

	public @jnr.ffi.types.u_int64_t long getOffset () {
		return offset.get();
	}

	public WGPUBindGroupEntry setOffset (@jnr.ffi.types.u_int64_t long val) {
		this.offset.set(val);
		return this;
	}

	public @jnr.ffi.types.u_int64_t long getSize () {
		return size.get();
	}

	public WGPUBindGroupEntry setSize (@jnr.ffi.types.u_int64_t long val) {
		this.size.set(val);
		return this;
	}

	public jnr.ffi.Pointer getSampler () {
		return sampler.get();
	}

	public WGPUBindGroupEntry setSampler (jnr.ffi.Pointer val) {
		this.sampler.set(val);
		return this;
	}

	public jnr.ffi.Pointer getTextureView () {
		return textureView.get();
	}

	public WGPUBindGroupEntry setTextureView (jnr.ffi.Pointer val) {
		this.textureView.set(val);
		return this;
	}

}
