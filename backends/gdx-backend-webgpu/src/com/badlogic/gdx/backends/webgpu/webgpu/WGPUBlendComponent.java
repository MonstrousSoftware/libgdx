package com.badlogic.gdx.backends.webgpu.webgpu;

import com.badlogic.gdx.backends.webgpu.utils.WgpuJavaStruct;
import jnr.ffi.Runtime;

/** NOTE: THIS FILE WAS PRE-GENERATED BY JNR_GEN! */
public class WGPUBlendComponent extends WgpuJavaStruct {

    private final Enum<WGPUBlendOperation> operation = new Enum<>(WGPUBlendOperation.class);
    private final Enum<WGPUBlendFactor> srcFactor = new Enum<>(WGPUBlendFactor.class);
    private final Enum<WGPUBlendFactor> dstFactor = new Enum<>(WGPUBlendFactor.class);

    private WGPUBlendComponent(){}

    @Deprecated
    public WGPUBlendComponent(Runtime runtime){
        super(runtime);
    }

	/**
	* Creates this struct on the java heap.
	* In general, this should <b>not</b> be used because these structs
	* cannot be directly passed into native code. 
	*/
    public static WGPUBlendComponent createHeap(){
        return new WGPUBlendComponent();
    }

	/**
	* Creates this struct in direct memory.
	* This is how most structs should be created (unless, they
	* are members of a nothing struct)
	* 
	* @see WgpuJavaStruct#useDirectMemory
	*/
    public static WGPUBlendComponent createDirect(){
        WGPUBlendComponent struct = new WGPUBlendComponent();
        struct.useDirectMemory();
        return struct;
    }


    public WGPUBlendOperation getOperation(){
        return operation.get();
    }

    public WGPUBlendComponent setOperation(WGPUBlendOperation val){
        this.operation.set(val); return this;
    }

    public WGPUBlendFactor getSrcFactor(){
        return srcFactor.get();
    }

    public WGPUBlendComponent setSrcFactor(WGPUBlendFactor val){
        this.srcFactor.set(val); return this;
    }

    public WGPUBlendFactor getDstFactor(){
        return dstFactor.get();
    }

    public WGPUBlendComponent setDstFactor(WGPUBlendFactor val){
        this.dstFactor.set(val); return this;
    }

}