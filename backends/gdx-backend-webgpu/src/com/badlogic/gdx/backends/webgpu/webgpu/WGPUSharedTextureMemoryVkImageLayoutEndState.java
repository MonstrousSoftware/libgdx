package com.badlogic.gdx.backends.webgpu.webgpu;

import com.badlogic.gdx.backends.webgpu.utils.WgpuJavaStruct;
import jnr.ffi.Runtime;

/** NOTE: THIS FILE WAS PRE-GENERATED BY JNR_GEN! */
public class WGPUSharedTextureMemoryVkImageLayoutEndState extends WgpuJavaStruct {

    private final WGPUChainedStructOut chain = inner(WGPUChainedStructOut.createHeap());
    private final Signed32 oldLayout = new Signed32();
    private final Signed32 newLayout = new Signed32();

    private WGPUSharedTextureMemoryVkImageLayoutEndState(){}

    @Deprecated
    public WGPUSharedTextureMemoryVkImageLayoutEndState(Runtime runtime){
        super(runtime);
    }

	/**
	* Creates this struct on the java heap.
	* In general, this should <b>not</b> be used because these structs
	* cannot be directly passed into native code. 
	*/
    public static WGPUSharedTextureMemoryVkImageLayoutEndState createHeap(){
        return new WGPUSharedTextureMemoryVkImageLayoutEndState();
    }

	/**
	* Creates this struct in direct memory.
	* This is how most structs should be created (unless, they
	* are members of a nothing struct)
	* 
	* @see WgpuJavaStruct#useDirectMemory
	*/
    public static WGPUSharedTextureMemoryVkImageLayoutEndState createDirect(){
        WGPUSharedTextureMemoryVkImageLayoutEndState struct = new WGPUSharedTextureMemoryVkImageLayoutEndState();
        struct.useDirectMemory();
        return struct;
    }


    public WGPUChainedStructOut getChain(){
        return chain;
    }

    public int getOldLayout(){
        return oldLayout.get();
    }

    public WGPUSharedTextureMemoryVkImageLayoutEndState setOldLayout(int val){
        this.oldLayout.set(val); return this;
    }

    public int getNewLayout(){
        return newLayout.get();
    }

    public WGPUSharedTextureMemoryVkImageLayoutEndState setNewLayout(int val){
        this.newLayout.set(val); return this;
    }

}