
package com.badlogic.gdx.webgpu.webgpu;

import com.badlogic.gdx.webgpu.utils.CStrPointer;
import com.badlogic.gdx.webgpu.utils.JavaWebGPU;
import com.badlogic.gdx.webgpu.utils.RustCString;
import com.badlogic.gdx.webgpu.utils.WgpuJavaStruct;
import jnr.ffi.Runtime;
import jnr.ffi.Struct;
import org.jetbrains.annotations.Nullable;

/** NOTE: THIS FILE WAS PRE-GENERATED BY JNR_GEN! */
public class WGPUBufferDescriptor extends WgpuJavaStruct {

	private final DynamicStructRef<WGPUChainedStruct> nextInChain = new DynamicStructRef<>(WGPUChainedStruct.class);
	private final @Nullable @CStrPointer Struct.Pointer label = new Pointer();
	private final Unsigned32 usage = new Unsigned32();
	private final Unsigned64 size = new Unsigned64();
	private final Unsigned32 mappedAtCreation = new Unsigned32();

	private WGPUBufferDescriptor () {
	}

	@Deprecated
	public WGPUBufferDescriptor (Runtime runtime) {
		super(runtime);
	}

	/** Creates this struct on the java heap. In general, this should <b>not</b> be used because these structs cannot be directly
	 * passed into native code. */
	public static WGPUBufferDescriptor createHeap () {
		return new WGPUBufferDescriptor();
	}

	/** Creates this struct in direct memory. This is how most structs should be created (unless, they are members of a nothing
	 * struct)
	 * 
	 * @see WgpuJavaStruct#useDirectMemory */
	public static WGPUBufferDescriptor createDirect () {
		WGPUBufferDescriptor struct = new WGPUBufferDescriptor();
		struct.useDirectMemory();
		return struct;
	}

	public DynamicStructRef<WGPUChainedStruct> getNextInChain () {
		return nextInChain;
	}

	public WGPUBufferDescriptor setNextInChain (WGPUChainedStruct... x) {
		if (x.length == 0 || x[0] == null) {
			this.nextInChain.set(JavaWebGPU.createNullPointer());
		} else {
			this.nextInChain.set(x);
		}
		return this;
	}

	public java.lang.String getLabel () {
		return RustCString.fromPointer(label.get());
	}

	public WGPUBufferDescriptor setLabel (java.lang.String str) {
		this.label.set(RustCString.toPointer(str));
		return this;
	}

	public long getUsage () {
		return usage.get();
	}

	public WGPUBufferDescriptor setUsage (long val) {
		this.usage.set(val);
		return this;
	}

	public @jnr.ffi.types.u_int64_t long getSize () {
		return size.get();
	}

	public WGPUBufferDescriptor setSize (@jnr.ffi.types.u_int64_t long val) {
		this.size.set(val);
		return this;
	}

	public long getMappedAtCreation () {
		return mappedAtCreation.get();
	}

	public WGPUBufferDescriptor setMappedAtCreation (long val) {
		this.mappedAtCreation.set(val);
		return this;
	}

}
