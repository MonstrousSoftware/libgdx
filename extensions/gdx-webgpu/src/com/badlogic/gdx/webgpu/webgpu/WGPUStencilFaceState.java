
package com.badlogic.gdx.webgpu.webgpu;

import com.badlogic.gdx.webgpu.utils.WgpuJavaStruct;
import jnr.ffi.Runtime;

/** NOTE: THIS FILE WAS PRE-GENERATED BY JNR_GEN! */
public class WGPUStencilFaceState extends WgpuJavaStruct {

	private final Enum<WGPUCompareFunction> compare = new Enum<>(WGPUCompareFunction.class);
	private final Enum<WGPUStencilOperation> failOp = new Enum<>(WGPUStencilOperation.class);
	private final Enum<WGPUStencilOperation> depthFailOp = new Enum<>(WGPUStencilOperation.class);
	private final Enum<WGPUStencilOperation> passOp = new Enum<>(WGPUStencilOperation.class);

	private WGPUStencilFaceState () {
	}

	@Deprecated
	public WGPUStencilFaceState (Runtime runtime) {
		super(runtime);
	}

	/** Creates this struct on the java heap. In general, this should <b>not</b> be used because these structs cannot be directly
	 * passed into native code. */
	public static WGPUStencilFaceState createHeap () {
		return new WGPUStencilFaceState();
	}

	/** Creates this struct in direct memory. This is how most structs should be created (unless, they are members of a nothing
	 * struct)
	 * 
	 * @see WgpuJavaStruct#useDirectMemory */
	public static WGPUStencilFaceState createDirect () {
		WGPUStencilFaceState struct = new WGPUStencilFaceState();
		struct.useDirectMemory();
		return struct;
	}

	public WGPUCompareFunction getCompare () {
		return compare.get();
	}

	public WGPUStencilFaceState setCompare (WGPUCompareFunction val) {
		this.compare.set(val);
		return this;
	}

	public WGPUStencilOperation getFailOp () {
		return failOp.get();
	}

	public WGPUStencilFaceState setFailOp (WGPUStencilOperation val) {
		this.failOp.set(val);
		return this;
	}

	public WGPUStencilOperation getDepthFailOp () {
		return depthFailOp.get();
	}

	public WGPUStencilFaceState setDepthFailOp (WGPUStencilOperation val) {
		this.depthFailOp.set(val);
		return this;
	}

	public WGPUStencilOperation getPassOp () {
		return passOp.get();
	}

	public WGPUStencilFaceState setPassOp (WGPUStencilOperation val) {
		this.passOp.set(val);
		return this;
	}

}
