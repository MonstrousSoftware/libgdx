
package com.badlogic.gdx.webgpu.webgpu;

import com.badlogic.gdx.webgpu.utils.JavaWebGPU;
import com.badlogic.gdx.webgpu.utils.WgpuJavaStruct;
import jnr.ffi.Runtime;

/** NOTE: THIS FILE WAS PRE-GENERATED BY JNR_GEN! */
public class WGPUStorageTextureBindingLayout extends WgpuJavaStruct {

	private final DynamicStructRef<WGPUChainedStruct> nextInChain = new DynamicStructRef<>(WGPUChainedStruct.class);
	private final Enum<WGPUStorageTextureAccess> access = new Enum<>(WGPUStorageTextureAccess.class);
	private final Enum<WGPUTextureFormat> format = new Enum<>(WGPUTextureFormat.class);
	private final Enum<WGPUTextureViewDimension> viewDimension = new Enum<>(WGPUTextureViewDimension.class);

	private WGPUStorageTextureBindingLayout () {
	}

	@Deprecated
	public WGPUStorageTextureBindingLayout (Runtime runtime) {
		super(runtime);
	}

	/** Creates this struct on the java heap. In general, this should <b>not</b> be used because these structs cannot be directly
	 * passed into native code. */
	public static WGPUStorageTextureBindingLayout createHeap () {
		return new WGPUStorageTextureBindingLayout();
	}

	/** Creates this struct in direct memory. This is how most structs should be created (unless, they are members of a nothing
	 * struct)
	 * 
	 * @see WgpuJavaStruct#useDirectMemory */
	public static WGPUStorageTextureBindingLayout createDirect () {
		WGPUStorageTextureBindingLayout struct = new WGPUStorageTextureBindingLayout();
		struct.useDirectMemory();
		return struct;
	}

	public DynamicStructRef<WGPUChainedStruct> getNextInChain () {
		return nextInChain;
	}

	public WGPUStorageTextureBindingLayout setNextInChain (WGPUChainedStruct... x) {
		if (x.length == 0 || x[0] == null) {
			this.nextInChain.set(JavaWebGPU.createNullPointer());
		} else {
			this.nextInChain.set(x);
		}
		return this;
	}

	public WGPUStorageTextureAccess getAccess () {
		return access.get();
	}

	public WGPUStorageTextureBindingLayout setAccess (WGPUStorageTextureAccess val) {
		this.access.set(val);
		return this;
	}

	public WGPUTextureFormat getFormat () {
		return format.get();
	}

	public WGPUStorageTextureBindingLayout setFormat (WGPUTextureFormat val) {
		this.format.set(val);
		return this;
	}

	public WGPUTextureViewDimension getViewDimension () {
		return viewDimension.get();
	}

	public WGPUStorageTextureBindingLayout setViewDimension (WGPUTextureViewDimension val) {
		this.viewDimension.set(val);
		return this;
	}

}
