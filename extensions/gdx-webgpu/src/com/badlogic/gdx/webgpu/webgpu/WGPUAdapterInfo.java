
package com.badlogic.gdx.webgpu.webgpu;

import com.badlogic.gdx.webgpu.utils.CStrPointer;
import com.badlogic.gdx.webgpu.utils.JavaWebGPU;
import com.badlogic.gdx.webgpu.utils.RustCString;
import com.badlogic.gdx.webgpu.utils.WgpuJavaStruct;
import jnr.ffi.Runtime;

/** NOTE: THIS FILE WAS PRE-GENERATED BY JNR_GEN! */
public class WGPUAdapterInfo extends WgpuJavaStruct {

	private final DynamicStructRef<WGPUChainedStructOut> nextInChain = new DynamicStructRef<>(WGPUChainedStructOut.class);
	private final @CStrPointer Pointer vendor = new Pointer();
	private final @CStrPointer Pointer architecture = new Pointer();
	private final @CStrPointer Pointer device = new Pointer();
	private final @CStrPointer Pointer description = new Pointer();
	private final Enum<WGPUBackendType> backendType = new Enum<>(WGPUBackendType.class);
	private final Enum<WGPUAdapterType> adapterType = new Enum<>(WGPUAdapterType.class);
	private final Unsigned32 vendorID = new Unsigned32();
	private final Unsigned32 deviceID = new Unsigned32();

	private WGPUAdapterInfo () {
	}

	@Deprecated
	public WGPUAdapterInfo (Runtime runtime) {
		super(runtime);
	}

	/** Creates this struct on the java heap. In general, this should <b>not</b> be used because these structs cannot be directly
	 * passed into native code. */
	public static WGPUAdapterInfo createHeap () {
		return new WGPUAdapterInfo();
	}

	/** Creates this struct in direct memory. This is how most structs should be created (unless, they are members of a nothing
	 * struct)
	 * 
	 * @see WgpuJavaStruct#useDirectMemory */
	public static WGPUAdapterInfo createDirect () {
		WGPUAdapterInfo struct = new WGPUAdapterInfo();
		struct.useDirectMemory();
		return struct;
	}

	public DynamicStructRef<WGPUChainedStructOut> getNextInChain () {
		return nextInChain;
	}

	public WGPUAdapterInfo setNextInChain (WGPUChainedStructOut... x) {
		if (x.length == 0 || x[0] == null) {
			this.nextInChain.set(JavaWebGPU.createNullPointer());
		} else {
			this.nextInChain.set(x);
		}
		return this;
	}

	public java.lang.String getVendor () {
		return RustCString.fromPointer(vendor.get());
	}

	public WGPUAdapterInfo setVendor (java.lang.String str) {
		this.vendor.set(RustCString.toPointer(str));
		return this;
	}

	public java.lang.String getArchitecture () {
		return RustCString.fromPointer(architecture.get());
	}

	public WGPUAdapterInfo setArchitecture (java.lang.String str) {
		this.architecture.set(RustCString.toPointer(str));
		return this;
	}

	public java.lang.String getDevice () {
		return RustCString.fromPointer(device.get());
	}

	public WGPUAdapterInfo setDevice (java.lang.String str) {
		this.device.set(RustCString.toPointer(str));
		return this;
	}

	public java.lang.String getDescription () {
		return RustCString.fromPointer(description.get());
	}

	public WGPUAdapterInfo setDescription (java.lang.String str) {
		this.description.set(RustCString.toPointer(str));
		return this;
	}

	public WGPUBackendType getBackendType () {
		return backendType.get();
	}

	public WGPUAdapterInfo setBackendType (WGPUBackendType val) {
		this.backendType.set(val);
		return this;
	}

	public WGPUAdapterType getAdapterType () {
		return adapterType.get();
	}

	public WGPUAdapterInfo setAdapterType (WGPUAdapterType val) {
		this.adapterType.set(val);
		return this;
	}

	public long getVendorID () {
		return vendorID.get();
	}

	public WGPUAdapterInfo setVendorID (long val) {
		this.vendorID.set(val);
		return this;
	}

	public long getDeviceID () {
		return deviceID.get();
	}

	public WGPUAdapterInfo setDeviceID (long val) {
		this.deviceID.set(val);
		return this;
	}

}
