
package com.badlogic.gdx.webgpu.webgpu;

import com.badlogic.gdx.webgpu.utils.JavaWebGPU;
import com.badlogic.gdx.webgpu.utils.WgpuJavaStruct;
import jnr.ffi.Runtime;

/** NOTE: THIS FILE WAS PRE-GENERATED BY JNR_GEN! */
public class WGPUPrimitiveState extends WgpuJavaStruct {

	private final DynamicStructRef<WGPUChainedStruct> nextInChain = new DynamicStructRef<>(WGPUChainedStruct.class);
	private final Enum<WGPUPrimitiveTopology> topology = new Enum<>(WGPUPrimitiveTopology.class);
	private final Enum<WGPUIndexFormat> stripIndexFormat = new Enum<>(WGPUIndexFormat.class);
	private final Enum<WGPUFrontFace> frontFace = new Enum<>(WGPUFrontFace.class);
	private final Enum<WGPUCullMode> cullMode = new Enum<>(WGPUCullMode.class);

	private WGPUPrimitiveState () {
	}

	@Deprecated
	public WGPUPrimitiveState (Runtime runtime) {
		super(runtime);
	}

	/** Creates this struct on the java heap. In general, this should <b>not</b> be used because these structs cannot be directly
	 * passed into native code. */
	public static WGPUPrimitiveState createHeap () {
		return new WGPUPrimitiveState();
	}

	/** Creates this struct in direct memory. This is how most structs should be created (unless, they are members of a nothing
	 * struct)
	 * 
	 * @see WgpuJavaStruct#useDirectMemory */
	public static WGPUPrimitiveState createDirect () {
		WGPUPrimitiveState struct = new WGPUPrimitiveState();
		struct.useDirectMemory();
		return struct;
	}

	public DynamicStructRef<WGPUChainedStruct> getNextInChain () {
		return nextInChain;
	}

	public WGPUPrimitiveState setNextInChain (WGPUChainedStruct... x) {
		if (x.length == 0 || x[0] == null) {
			this.nextInChain.set(JavaWebGPU.createNullPointer());
		} else {
			this.nextInChain.set(x);
		}
		return this;
	}

	public WGPUPrimitiveTopology getTopology () {
		return topology.get();
	}

	public WGPUPrimitiveState setTopology (WGPUPrimitiveTopology val) {
		this.topology.set(val);
		return this;
	}

	public WGPUIndexFormat getStripIndexFormat () {
		return stripIndexFormat.get();
	}

	public WGPUPrimitiveState setStripIndexFormat (WGPUIndexFormat val) {
		this.stripIndexFormat.set(val);
		return this;
	}

	public WGPUFrontFace getFrontFace () {
		return frontFace.get();
	}

	public WGPUPrimitiveState setFrontFace (WGPUFrontFace val) {
		this.frontFace.set(val);
		return this;
	}

	public WGPUCullMode getCullMode () {
		return cullMode.get();
	}

	public WGPUPrimitiveState setCullMode (WGPUCullMode val) {
		this.cullMode.set(val);
		return this;
	}

}
