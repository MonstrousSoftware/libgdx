
package com.badlogic.gdx.webgpu.webgpu;

import com.badlogic.gdx.webgpu.utils.WgpuJavaStruct;
import jnr.ffi.Runtime;

/** NOTE: THIS FILE WAS PRE-GENERATED BY JNR_GEN! */
public class WGPUDawnEncoderInternalUsageDescriptor extends WgpuJavaStruct {

	private final WGPUChainedStruct chain = inner(WGPUChainedStruct.createHeap());
	private final Unsigned32 useInternalUsages = new Unsigned32();

	private WGPUDawnEncoderInternalUsageDescriptor () {
	}

	@Deprecated
	public WGPUDawnEncoderInternalUsageDescriptor (Runtime runtime) {
		super(runtime);
	}

	/** Creates this struct on the java heap. In general, this should <b>not</b> be used because these structs cannot be directly
	 * passed into native code. */
	public static WGPUDawnEncoderInternalUsageDescriptor createHeap () {
		return new WGPUDawnEncoderInternalUsageDescriptor();
	}

	/** Creates this struct in direct memory. This is how most structs should be created (unless, they are members of a nothing
	 * struct)
	 * 
	 * @see WgpuJavaStruct#useDirectMemory */
	public static WGPUDawnEncoderInternalUsageDescriptor createDirect () {
		WGPUDawnEncoderInternalUsageDescriptor struct = new WGPUDawnEncoderInternalUsageDescriptor();
		struct.useDirectMemory();
		return struct;
	}

	public WGPUChainedStruct getChain () {
		return chain;
	}

	public long getUseInternalUsages () {
		return useInternalUsages.get();
	}

	public WGPUDawnEncoderInternalUsageDescriptor setUseInternalUsages (long val) {
		this.useInternalUsages.set(val);
		return this;
	}

}
