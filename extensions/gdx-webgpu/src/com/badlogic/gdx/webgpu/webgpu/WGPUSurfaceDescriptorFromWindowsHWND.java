
package com.badlogic.gdx.webgpu.webgpu;

import com.badlogic.gdx.webgpu.utils.WgpuJavaStruct;
import jnr.ffi.Runtime;

/** NOTE: THIS FILE WAS PRE-GENERATED BY JNR_GEN! */
public class WGPUSurfaceDescriptorFromWindowsHWND extends WgpuJavaStruct {

	private final WGPUChainedStruct chain = inner(WGPUChainedStruct.createHeap());
	private final Pointer hinstance = new Pointer();
	private final Pointer hwnd = new Pointer();

	private WGPUSurfaceDescriptorFromWindowsHWND () {
	}

	@Deprecated
	public WGPUSurfaceDescriptorFromWindowsHWND (Runtime runtime) {
		super(runtime);
	}

	/** Creates this struct on the java heap. In general, this should <b>not</b> be used because these structs cannot be directly
	 * passed into native code. */
	public static WGPUSurfaceDescriptorFromWindowsHWND createHeap () {
		return new WGPUSurfaceDescriptorFromWindowsHWND();
	}

	/** Creates this struct in direct memory. This is how most structs should be created (unless, they are members of a nothing
	 * struct)
	 * 
	 * @see WgpuJavaStruct#useDirectMemory */
	public static WGPUSurfaceDescriptorFromWindowsHWND createDirect () {
		WGPUSurfaceDescriptorFromWindowsHWND struct = new WGPUSurfaceDescriptorFromWindowsHWND();
		struct.useDirectMemory();
		return struct;
	}

	public WGPUChainedStruct getChain () {
		return chain;
	}

	public jnr.ffi.Pointer getHinstance () {
		return hinstance.get();
	}

	public WGPUSurfaceDescriptorFromWindowsHWND setHinstance (jnr.ffi.Pointer val) {
		this.hinstance.set(val);
		return this;
	}

	public jnr.ffi.Pointer getHwnd () {
		return hwnd.get();
	}

	public WGPUSurfaceDescriptorFromWindowsHWND setHwnd (jnr.ffi.Pointer val) {
		this.hwnd.set(val);
		return this;
	}

}
